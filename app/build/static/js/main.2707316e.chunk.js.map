{"version":3,"sources":["components/Entry.tsx","components/CreateRoom.tsx","components/JoinRoom.tsx","components/Graff.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Entry","className","CssBaseline","Container","fixed","Typography","component","style","height","backgroundColor","align","padding","fontSize","Button","variant","color","textDecoration","to","CreateRoom","noValidate","autoComplete","margin","TextField","id","label","JoinRoom","Graff","oldPos","useState","setColor","canvasRef","useRef","drawing","getContext","current","getPos","e","clientX","clientY","touches","changedTouches","touch","x","y","cnvRect","getBoundingClientRect","left","document","documentElement","scrollLeft","body","top","draw","ctx","pos","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","useEffect","lineWidth","lineJoin","lineCap","cnv","addEventListener","console","log","settingCanvas","save","ref","width","border","position","bottom","background","display","justifyContent","alignItems","alt","src","type","name","value","onChange","target","size","onClick","clearRect","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2707316e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, CssBaseline, Container, Typography } from '@material-ui/core';\n\nconst Entry = () => {\n  return (\n    <div className=\"Entry\">\n\t\t  <CssBaseline />\n      <Container fixed>\n        <Typography component=\"div\" style={{ height: '100vh', backgroundColor: '#fff' }}>\n          <Typography component=\"h1\" align=\"right\" style={{ backgroundColor: '#fff', padding: '64px 0', fontSize: '24px' }} >\n            Graffiti\n          </Typography>\n          <Typography component=\"div\" align=\"center\">\n            <Button variant=\"contained\" color=\"primary\">\n              <Link style={{textDecoration: 'none', color: 'inherit'}} to='/room/create/'>\n                ルームを作る\n              </Link>\n            </Button>\n          </Typography>\n          <Typography component=\"div\" align=\"center\">\n            <Button color=\"primary\">\n              <Link style={{textDecoration: 'none', color: 'inherit'}} to='/room/join/'>\n                ルームに参加\n              </Link>\n            </Button>\n          </Typography>\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default Entry;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, CssBaseline, Container, Typography, TextField } from '@material-ui/core';\n\nconst CreateRoom = () => {\n  return (\n    <div className=\"Entry\">\n\t\t  <CssBaseline />\n        <Container fixed>\n          <Typography component=\"div\" style={{ height: '100vh', backgroundColor: '#fff' }}>\n            <Typography component=\"h2\" align=\"left\">Graffiti</Typography>\n            <form noValidate autoComplete=\"off\">\n              <Typography component=\"div\" align=\"center\" style={{margin: '8px'}}>\n                <TextField id=\"standard-basic\" label=\"Room名\" />\n              </Typography>\n              <Typography component=\"div\" align=\"center\">\n                <Button variant=\"contained\" color=\"primary\">\n                  作成 \n                </Button>\n              </Typography>\n              <Typography component=\"div\" align=\"center\">\n                <Button color=\"primary\">\n                  <Link to='/' style={{textDecoration: 'none', color: 'inherit'}}>\n                    キャンセル\n                  </Link>\n                </Button>\n              </Typography>\n            </form>\n          </Typography>\n        </Container>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, CssBaseline, Container, Typography, TextField } from '@material-ui/core';\n\nconst JoinRoom = () => {\n  return (\n    <div className=\"Entry\">\n\t\t  <CssBaseline />\n        <Container fixed>\n          <Typography component=\"div\" style={{ height: '100vh', backgroundColor: '#fff' }}>\n            <Typography component=\"h2\" align=\"left\">Graffiti</Typography>\n            <form noValidate autoComplete=\"off\">\n              <Typography component=\"div\" align=\"center\" style={{margin: '8px'}}>\n                <TextField id=\"standard-basic\" label=\"Room名\" />\n              </Typography>\n              <Typography component=\"div\" align=\"center\">\n                <Button variant=\"contained\" color=\"primary\">\n                  参加\n                </Button>\n              </Typography>\n              <Typography component=\"div\" align=\"center\">\n                <Button color=\"primary\">\n                  <Link to='/' style={{textDecoration: 'none', color: 'inherit'}}>\n                    キャンセル\n                  </Link>\n                </Button>\n              </Typography>\n            </form>\n          </Typography>\n        </Container>\n    </div>\n  );\n};\n\nexport default JoinRoom;\n","import React, {useState, useEffect, useRef, MouseEvent} from 'react';\nimport { Button, CssBaseline, Container, Typography, TextField } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst scrollX = (): number => document.documentElement.scrollLeft || document.body.scrollLeft;\nconst scrollY = (): number => document.documentElement.scrollTop || document.body.scrollTop;\n\n\nconst Graff = () => {\n  const [color, setColor] = useState('#000000');\n  const canvasRef = useRef(null);\n\n  let drawing = false;\n  let oldPos: Position;\n\n  // Canvasのcontextを取得\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    return canvas.getContext('2d');\n  };\n\n  // タッチpositionの取得\n  const getPos = <T extends {clientX?: number, clientY?: number, touches?: any[], changedTouches?: any[]}>(e: T): Position => {\n    let clientX, clientY;\n    if (e.touches || e.changedTouches) {\n      const touch = e.touches[0] || e.changedTouches[0];\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n    } else {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    }\n\n    if (!clientX || !clientY) return {x:0,y:0};\n\n    const cnvRect: ClientRect = canvasRef.current.getBoundingClientRect();\n    const x = clientX - cnvRect.left + scrollX();\n    const y = clientY - cnvRect.top;\n    return {x,y};\n  };\n\n  // 描画\n  const draw = (ctx: CanvasRenderingContext2D, oldPos: Position, pos: Position): void => {\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(oldPos.x, oldPos.y);\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n    ctx.closePath();\n  };\n\n  // キャンバスクリア\n  const clear = (): void => {\n    const ctx: CanvasRenderingContext2D = getContext();\n    ctx.clearRect(0,0,canvasRef.current.width, canvasRef.current.height);\n  };\n\n  // Canvasのリスナ設定\n  const settingCanvas = (ctx: CanvasRenderingContext2D): void => {\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 5;\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n\n    const cnv = canvasRef.current;\n    if (!cnv) return;\n\n    // PC\n    cnv.addEventListener(\"mousedown\", (e: MouseEvent<HTMLElement>) => {\n      console.log(\"mousedown\");\n      drawing = true;\n      oldPos = getPos(e);\n    }, false);\n    cnv.addEventListener(\"mouseup\", () => drawing = false, false);\n    cnv.addEventListener(\"mousemove\", (e: MouseEvent<HTMLElement>) => {\n      const pos = getPos(e);\n      if (drawing) {\n        draw(ctx, oldPos, pos);\n\n        // socket.IOサーバーに、\n        // どの点からどの点までを描画するかをの情報を送付する\n        // socket.emit(\"draw\", {before:oldPos, after:pos});\n        oldPos = pos;\n      }\n    }, false);\n    cnv.addEventListener(\"mouseout\", () => drawing = false, false);\n\n    // SP\n    cnv.addEventListener(\"touchstart\", (e: MouseEvent<HTMLElement>) => {\n      console.log(\"mousedown\");\n      drawing = true;\n      oldPos = getPos(e);\n    }, false);\n    cnv.addEventListener(\"touchend\", () => drawing = false, false);\n    cnv.addEventListener(\"touchmove\", (e: MouseEvent<HTMLElement>) => {\n      const pos = getPos(e);\n      if (drawing) {\n        draw(ctx, oldPos, pos);\n\n        // socket.IOサーバーに、\n        // どの点からどの点までを描画するかをの情報を送付する\n        // socket.emit(\"draw\", {before:oldPos, after:pos});\n        oldPos = pos;\n      }\n    }, false);\n  };\n\n  useEffect(() => {\n    const ctx: CanvasRenderingContext2D = getContext();\n    settingCanvas(ctx);\n    ctx.save();\n  });\n\n  return(\n    <div className=\"Entry\">\n      <CssBaseline />\n      <Container fixed>\n        <Typography component=\"div\" style={{ height: '100vh', backgroundColor: '#fff' }}>\n          <Typography component=\"h2\" align=\"left\">Graffiti</Typography>\n          <Typography component=\"div\" align=\"center\">\n            <canvas ref={canvasRef} height='500' width='300' style={{border: '1px solid #eee'}}/>\n          </Typography>\n          <Typography component=\"div\" align=\"center\">\n            <Button color=\"secondary\" variant=\"contained\" style={{margin: \"16px\"}} >\n              <Link to=\"/\" style={{textDecoration: 'none', color: 'inherit'}}>退出</Link>\n            </Button>\n            <Button variant=\"contained\" color=\"primary\">\n              次の人に渡す \n            </Button>\n          </Typography>\n        </Typography>\n        <Typography component=\"div\" align=\"center\" style={{position: \"fixed\", bottom: 0, width: \"100%\", background: \"#eee\"}}>\n          <Typography component=\"div\" align=\"center\" style={{display: \"flex\", justifyContent: \"center\", margin: \"12px\", alignItems: \"center\"}}>\n            <div>\n              <img alt=\"pen\" width=\"16\" height=\"16\" src=\"/images/pen.png\" />\n              <input type=\"color\" id=\"head\" name=\"head\" value={color} onChange={(e) => setColor(e.target.value)} />\n            </div>\n            <div>\n              <Button color=\"secondary\" size=\"small\" variant=\"contained\" style={{margin: \"0 16px\"}} onClick={() => clear()}>クリア</Button>\n            </div>\n          </Typography>\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default Graff;\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Entry from './Entry';\nimport CreateRoom from './CreateRoom';\nimport JoinRoom from './JoinRoom';\nimport Graff from './Graff';\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Route exact path='/' component={Entry} />\n        <Route path='/room/create/' component={CreateRoom} />\n        <Route path='/room/join/' component={JoinRoom} />\n        <Route path='/graf/:roomId/' component={Graff} />\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}